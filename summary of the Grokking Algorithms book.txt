Конспект по книге Грогаем алгоритмы.
Chapter 6.
Breadth-first search.

Графы реализованы в Python в качестве словарей. Графы имеют узлы и ребра и призваны найти кратчайшее и самое дешевое расстояние от узла A до узла B. Задача: найти среди друзей в телефонной книге продавца манго.
Алгоритм поиска состоит из 6 пунктов:
Создать словарь в котором значению “ключ” будет соответствовать имя человека, value - список его связей.
Извлечь из очереди непроверенного человека.
Проверить является ли человек продавцом манго.
Здесь ветвление: если человек найден, выходим из цикла, если нет, проверяем список его контактов.
Работает цикл.
Если очередь пуста - выходим из программы.

graph = {}
graph [ "you"] = [ "alice", "bob", "claire"]
graph("bob"] = ("anuj", "peggy"]
graph["alice"] = ["peggy"]
graph["claire"] = ["thom", "jonny"]
graph["anuj"] = []
graph["peggy"] = []
graph["thom"] = []
graph("jonny"] = [] 
from collections import deque
search_queue = deque()

